
      tmount - монтировщик/размонтировщик блочных устройств
               для системного лотка (и не только) в Linux.

      Александр Б. Вальднер, 2016-2019.
  Условия использования см. в файле COPYING.

      tmount - приложение, при запуске помещающееся в системный лоток (трэй,
  область уведомлений), средствами udev отслеживающее все блочные устройства,
  содержащие файловые системы и позволяющее монтировать и отмонтировать их (и
  разблокировать/блокировать контейнеры LUKS).  Кроме того, приложение может
  работать как автомонтировщик для сменных устройств и носителей.
      Действия выбираются (переключаются) в меню, показываемом по щелчку левой
  кнопкой мыши на иконке в лотке.  Контекстное (вызываемое щелчком правой
  кнопки) меню этой иконки содержит пункты "Настройки", "Выход" и "Открыть
  образ".  При щелчке правой кнопкой на пункте меню действий активируется
  дополнительное меню, содержащее пункты "Извлечь" и/или "Отключить", и/или
  "Отмонтировать все Т[очки]М[онтирования]", если они применимы к данному
  устройству.

      По умолчанию tmount использует udevil
  (https://ignorantguru.github.com/udevil) для монтирования/размонтирования.
  Вы можете использовать любую подходящую программу или собственный скрипт
  путём редактирования полей "Монтировать" и "Отмонтировать" в окне диалога
  "Настройки".  Имя файла устройства (напр. /dev/sdc1 или /dev/sr0) будет
  добавлено в конец заданной командной строки для команд монтирования и
  разблокирования контейнера, и файловое имя точки монтирования будет
  добавлено для команды отмонтирования.  Например, для использования программы
  pmount (http://pmount.alioth.debian.org) просто введите "pmount" и "pumount"
  в соответствующие поля.  Имя файла устройства полного диска (напр. /dev/sdc
  для /dev/sdc[1-9] и /dev/sr0 для /dev/sr0), будет добавлено для команд
  извлечения носителя и отключения устройства.  Если вы оставите поля
  "Извлечь" и/или "Отключить" пустыми, соответствующие пункты меню просто
  станут недоступны.
      Действие "Отмонтировать все ТМ" применяет команду "Отмонтировать" ко
  всем точкам монтирования данного устройства.
      Перед запуском команды "Отключить" или "Извлечь" приложение пытается
  отмонтировать все точки монтирования на всех разделах диска, затем
  проверяет, нет ли на заданном устройстве примонтированных файловых систем,
  отображённых контейнеров или loopback-отображений, а также не используется
  ли устройство или какой-либо из его разделов другими программами.  Однако
  приложение не может обнаружить программ, запущенных от имени другого
  пользователя, таких как (g)parted, *fdisk, mkfs.* от root, или cd/dvd-
  рекордер или медиаплеер от другого пользователя из группы cdrom.  Кроме
  того, в общем случае программа не может блокировать устройство перед началом
  проверки.
      Пункт контекстного меню "Открыть образ" позволяет выбрать в диалоговом
  окне файл образа файловой системы и передаёт его имя команде, заданной в
  поле "Открыть образ" диалога настроек, аналогично имени файла устройства.
  Этого достаточно для программ udevil и pmount при соответствующих
  настройках. (Смотрите, однако, замечание о pmount в файле luks.txt.ru и
  скрипт img-pmount.sh в примерах.)
      Во всех вышеупомянутых полях не производится никаких shell-подстановок,
  кроме группировки строк в двойных кавычках в один параметр.  Для задания
  двойных кавычек литерально они должны быть утроены.  Путевое имя команды
  может определяться переменной окружения PATH или быть заданным явно.
  Поскольку, как правило, программа запускается, имея текущим рабочим
  каталогом собственный каталог пользователя, можно использовать, например,
  запись "./bin/myscrypt".
      Для каждого действия в соответствующем поле задаётся таймаут.
      Переключатели "Монтировать подключаемые устройства", "Монтировать
  съёмные носители" и "Монтировать при запуске" определяют, будет ли программа
  пытаться монтировать файловые системы соответственно на подключаемых
  устройствах, вставляемых носителях и устройствах, обнаруженных во время
  запуска программы.  По умолчанию все они выключены.  Переключатель
  "Автоизвлечение носителей" управляет автоматическим применением команды
  "извлечь", если она определена, к позволяющим это устройствам после
  успешного отмонтирования последней точки монтирования для данного
  устройства.  По умолчанию включён.
      Группа переключателей "Вывод" определяет, показывать ли вывод команды
  (явно или неявно заданной) при её успешном завершении.  Замечание: показ
  сообщений об ошибках не может быть отключён.  И то и другое блокирует цикл
  обработки событий приложения.
      Для конфигурирования разблокирования/блокирования контейнеров LUKS
  ознакомьтесь с файлом luks.txt.ru в каталоге /usr/share/tmount/docs или в
  каталоге проекта.  Замечание: разблокирование криптоконтейнеров никогда не
  запускается автоматически.  О конфигурировании пункта "Отключить" подробнее
  см. файл remove.txt.ru.
      По умолчанию tmount показывает все блочные устройства и разделы,
  содержащие файловую систему или контейнер LUKS.  Чтобы скрыть некоторые из
  них, например корневую файловую систему, введите расширенное регулярное
  выражение, задающее эти устройства (например "/dev/sd([ab].*|c1)") в поле
  "Скрытые устройства".  Вы также можете задать устройства, которые будут
  показываться всегда, независимо от наличия файловой системы, контейнера и
  даже носителя.  Для этого введите соответствующее регулярное выражение
  (например "/dev/sr[01]") в поле "Показывать всегда". (Замечание: всё это
  PCRE, а не образцы в стиле shell.)
      Все настройки могут быть также установлены редактированием
  конфигурационного файла ~/.config/tmount/tmount.conf, который создаётся при
  первом запуске tmount.  Для выполняемых программ или скриптов
  устанавливаются переменные окружения вида "TMOUNT_<имя>=<значение>", где
  <имя> - ключ из этого файла.  Кроме того в этом файле задаётся параметр
  Start_timeout (время в секундах для старта вызываемых программ).

      Программа видит все созданные вне её точки монтирования
  (автомонтировщиком, файл-менеджером или вручную) на физических или
  виртуальных ("loopback", "device mapper") устройствах, так же как и
  созданные с использованием "mount --bind", и предлагает отдельные пункты
  меню для размонтирования каждой из них.  Замечание: программа pumount, в
  отличие от udevil, может в таких случаях работать некорректно, размонтируя
  не ту точку, что указана.  Однако это не мешает работе приложения.

      При получении сигналов UNIX TERM, HUP, INT и QUIT программа корректно
  завершается.  Получение SIGUSR1 вызывает показ меню устройств, а SIGUSR2 -
  дополнительного меню.  Это может быть использовано для чисто клавиатурного
  управления программой, например, с помощью горячих клавиш вашего любимого WM
  или DE.  Пример "pipe-menu" для Openbox есть в файле openbox.txt.
      Если программа запускается с параметром командной строки "-wait N", она
  ждёт доступности системного лотка до N секунд, затем молча завершается, если
  он остаётся недоступным.  Запуск без параметров эквивалентен запуску с
  "-wait 30".  При запуске с параметром "-wait 0" программа работает без
  показа иконки в системном лотке и может управляться только сигналами (см.
  выше).  Также переключение режимов "лоток/фон" возможно с помощью пунктов
  контекстного меню "Скрыть иконку/Показать в лотке" (если системный лоток
  доступен).
      Коды возврата: 0 - нормальное завершение, 1 - неверный параметр, 128+ -
  получен сигнал (128+SIGALRM=142 - превышено время ожидания).

      tmount использует функциональность только систем udev, procfs и sysfs и
  требует установки только библиотек libudev и Qt.  Это Linux-специфическая
  программа.  Текущая версия проверялась на qt-4.8.7, qt-5.11.3 и eudev 3.2.5.

      Установка:
      ----------

  1)  Убедитесь, что пакеты qtcore, qtgui и qtwidgets (для Qt5) установлены.
      В некоторых дистрибутивах могут быть необходимы "пакеты разработчика" -
      "-devel", "-tools" или подобные.
  2)  Извлеките каталог проекта из архива и перейдите (cd) в него.
  3)  Выполните "qmake" для конфигурирования программы.  Если вы хотите
      установить программу в каталог, отличный от /usr, установите новое
      значение переменной PREFIX во время конфигурации, например:
      "qmake PREFIX=/usr/local".
  4)  Выполните "make" для сборки приложения.
  5)  Выполните "sudo make install" (или "su -c 'make install'").

      Пользователи Gentoo или производных дистрибутивов могут поместить файл
  tmount.ebuild в свой локальный оверлей, переименовать его в соответствии с
  последней версией (напр., в "tmount-0.0.9.ebuild") или в
  "tmount-9999.ebuild" для установки текущей версии, выполнить
  "ebuild ... digest" и "emerge ...".
